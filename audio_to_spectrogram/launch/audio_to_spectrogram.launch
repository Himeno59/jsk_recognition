<!-- data flow  -->
<!-- audio -> spectrum -> spectrogram -->

<launch>

  <arg name="launch_audio_capture" default="true" />

  <arg name="bitdepth" default="16" />
  <arg name="mic_sampling_rate" default="16000" />
  <arg name="n_channel" default="1" />
  <arg name="device" default="hw:0,0" />
  <arg name="audio_topic" default="/audio" />
  <arg name="fft_sampling_period" default="0.3" />
  <arg name="fft_exec_rate" default="50" />
  <arg name="spectrogram_source" default="audio_to_spectrum/log_spectrum" />
  <arg name="high_cut_freq" default="800" />
  <arg name="low_cut_freq" default="1" />  <!-- default: remove 0Hz because this component is meaningless in audio -->
  <arg name="spectrogram_period" default="5" />
  <arg name="preprocessed_spectrogram_source_plot_amp_min" default="0.0" />
  <arg name="preprocessed_spectrogram_source_plot_amp_max" default="20.0" />
  <arg name="gui" default="true" />

  <!-- Publish audio topic from microphone -->
  <node name="audio_capture" pkg="audio_capture" type="audio_capture"
        if="$(arg launch_audio_capture)"
        respawn="true">
    <rosparam subst_value="true">
      format: wave
      channels: $(arg n_channel)
      depth: $(arg bitdepth)
      sample_rate: $(arg mic_sampling_rate)
      device: $(arg device)
    </rosparam>
  </node>

  <!-- convert audio topic to spectrum topic -->
  <node name="audio_to_spectrum"
        pkg="audio_to_spectrogram" type="audio_to_spectrum.py"
        respawn="true">
    <remap from="~audio" to="$(arg audio_topic)" />
    <rosparam subst_value="true">
      n_channel: $(arg n_channel)
      mic_sampling_rate: $(arg mic_sampling_rate)
      fft_sampling_period: $(arg fft_sampling_period)
      bitdepth: $(arg bitdepth)
      fft_exec_rate: $(arg fft_exec_rate)
    </rosparam>
  </node>

  <!-- convert spectrum topic to spectrogram topic -->
  <include file="$(find audio_to_spectrogram)/launch/spectrum_to_spectrogram.launch">
    <arg name="spectrum" value="$(arg spectrogram_source)" />
    <arg name="data_sampling_rate" value="$(arg mic_sampling_rate)" />
    <arg name="high_cut_freq" value="$(arg high_cut_freq)" />
    <arg name="low_cut_freq" value="$(arg low_cut_freq)" />
    <arg name="spectrogram_period" value="$(arg spectrogram_period)" />
    <arg name="preprocessed_spectrum_plot_amp_min" value="$(arg preprocessed_spectrogram_source_plot_amp_min)" />
    <arg name="preprocessed_spectrum_plot_amp_max" value="$(arg preprocessed_spectrogram_source_plot_amp_max)" />
    <arg name="gui" value="$(arg gui)" />
  </include>

  <!-- visualize amplitude image -->
  <node name="audio_amplitude_plot"
        pkg="audio_to_spectrogram" type="audio_amplitude_plot.py"
        output="screen">
    <remap from="~audio" to="$(arg audio_topic)" />
    <rosparam subst_value="true">
      n_channel: $(arg n_channel)
      mic_sampling_rate: $(arg mic_sampling_rate)
      bitdepth: $(arg bitdepth)
    </rosparam>
  </node>
  <group if="$(arg gui)">
    <node pkg="image_view" type="image_view" name="audio_amplitude_view"  >
      <remap from="image" to="audio_amplitude_plot/output/viz" />
    </node>
  </group>

</launch>
